name: GitHub Actions Demo
on: [push]
jobs:
  part1:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Set the value
        id: step_one
        run: |
          echo "action_state=yellow" >> $GITHUB_ENV
      - name: Use the value
        id: step_two
        run: |
          echo "${{ env.action_state }}" # This will output 'yellow'
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Create Resource Group Name
        id: create
        run: |
          slug=test-03
          sanitized=${slug//[^a-zA-Z0-9\-]/}
          final=${sanitized:0:12}
          standard=echo $final | sed 's/-*$//'
          dash_removed=echo $standard | sed 's/-//g'
          echo "::set-output name=pr::$standard"
          echo "::set-output name=pr_dash_removed::$dash_removed"
    outputs:
      test_output_1: 'foobar'
      test_output_2: test${{env.action_state}}
  part2:
    runs-on: ubuntu-latest
    needs: [part1]
    steps:
      - name: Use the value
        id: step_two
        run: |
          echo "${{ needs.part1.outputs.standard }}" # This will output standard
          echo "${{ needs.part1.outputs.dash_removed }}" # This will otuput dash_removed
          echo "${{ needs.part1.outputs.test_output_1 }}" # This will otuput 1
          echo "${{ needs.part1.outputs.test_output_2 }}" # This will output 2
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "üçè This job's status is ${{ job.status }}."
